@model App.Data.Entity.Employee

@{
    ViewBag.Title = "Edit";
}
<link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css">
<link rel="stylesheet" href="~/Content/Site.css" />
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()



    
    <div class="form-horizontal">
      @*//--------Progress-----*@
    <script src="~/scripts/jquery-1.12.4.js" type="text/javascript"></script>
    <script src="~/scripts/Progress.js" type="text/javascript"></script>
    <link rel="stylesheet" type="text/css" href="~/Content/progress_style.css">

    <div class='progress' id="progress_div">
        <div class='bar' id='bar1'></div>
        <div class='percent' id='percent1'></div>
    </div>
    <div id="wrapper">
        <div id="content">

        </div>
    </div>
    <input type="hidden" id="progress_width" value="0">
    @*///////end///////*@
        <h4>Employee</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MaritialStatus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.MaritialStatus)
                    @Html.ValidationMessageFor(model => model.MaritialStatus, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.State, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.State,
              new SelectList(ViewBag.States, "StateId", "Name"),
              "Select state",
              new { @class = "form-control", @onchange = "FillCity()" })
                @Html.ValidationMessageFor(m => m.State, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.City, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.City,
       new SelectList(Enumerable.Empty<SelectListItem>(), "CityId", "Name"),
              "Select city",
              new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.City, "", new { @class = "text-danger" })
            </div>
        </div>
       <div class="form-group">
        @Html.LabelFor(model => model.image, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.image, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.image, "", new { @class = "text-danger" })
        </div>
    </div>
        
        <div class="form-group" style="margin-left: 4px;">
            @Html.LabelFor(m => m.image, new { @class = "control-label col-md-2" })
            <input type="file" name="imageFile" class="control-label" id="imageFile" onchange="previewFile()" onload="loadFile()" />  <br />
            <div class="control-label col-md-5">
                
                @*<img src="~/Content/img/(item.Id.ToString()+item.image)" height="100">*@
                <img src="" height="200" style="margin-right: -10px;width: 283px;" alt="Image preview...">
            </div>
            @Html.ValidationMessageFor(model => model.image)
        </div>

            <div class="form-group">
                <div class="col-xs-12 button-holder">

                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" id="submit" value="Save" class="btn btn-success submit" />
                        <input type="reset" id="reset" value="Reset" class="btn btn-danger" />
                    </div>
                </div>
            </div>
        </div>        
              
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js" type="text/javascript"></script>
<script>
  function DisplayProgressMessage(ctl, msg) {
    $(ctl).prop("disabled", true);
    $(ctl).text(msg);
    return true;
  }
</script>

<script>
  function FillCity() {
    var stateId = $('#State').val();
    $.ajax({
        url: '/Employee/FillCity',
        type: "GET",
        dataType: "JSON",
        data: { State: stateId},
        success: function (cities) {
            $("#City").html(""); // clear before appending new list
            $.each(cities, function (i, city) {
                $("#City").append(
                    $('<option></option>').val(city.CityId).html(city.Name));
            });
        }
    });
  }
</script>

<script>
    function previewFile() {
        var preview = document.querySelector('img');
        var file = document.querySelector('input[type=file]').files[0];
        var reader = new FileReader();

        reader.addEventListener("load", function () {
            preview.src = reader.result;
        }, false);

        if (file) {
            reader.readAsDataURL(file);
        }
    }

</script>