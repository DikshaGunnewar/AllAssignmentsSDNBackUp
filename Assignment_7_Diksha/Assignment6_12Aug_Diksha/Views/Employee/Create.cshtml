@model App.Data.Entity.Employee

@{
    ViewBag.Title = "Create";
}
<link href='http://fonts.googleapis.com/css?family=Marcellus' rel='stylesheet' type='text/css'>
<!-- Include CSS file here -->
<link rel="stylesheet" type="text/css" href="css/processing.css">
<!-- Include jQuery file here -->
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
<script type="text/javascript" src="js/processing.js"></script>


@*//--------Progress-----*@
<script src="~/scripts/jquery-1.12.4.js" type="text/javascript"></script>
<script src="~/scripts/Progress.js" type="text/javascript"></script>
<link rel="stylesheet" type="text/css" href="~/Content/progress_style.css">

<div class='progress' id="progress_div">
    <div class='bar' id='bar1'></div>
    <div class='percent' id='percent1'></div>
</div>
<div id="wrapper">
    <div id="content"> 

    </div>
</div>
<input type="hidden" id="progress_width" value="0">
@*///////end///////*@

<h2>Add New Employee</h2>
<hr />
@using (Html.BeginForm("Create", "Employee", FormMethod.Post,
 new { id = "MyForm" , @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
     
       
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MaritialStatus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.MaritialStatus)
                    @Html.ValidationMessageFor(model => model.MaritialStatus, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.State, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.State,
              new SelectList(ViewBag.States, "StateId", "Name"),
              "Select state",
              new { @class = "form-control", @onchange = "FillCity()" })
                @Html.ValidationMessageFor(m => m.State, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.City, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.City,
       new SelectList(Enumerable.Empty<SelectListItem>(), "CityId", "Name"),
              "Select city",
              new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.City, "", new { @class = "text-danger" })
            </div>
        </div>      

        <div class="form-group" style="margin-left: 4px;">   
            @Html.LabelFor(m => m.image, new { @class = "control-label col-md-2" })
                <input type="file" name="imageFile" class="control-label" id="imageFile" onchange="previewFile()" />  <br />           
            <div class="control-label col-md-5">
                @*<img src="~/Content/img/(item.Id.ToString()+item.image)" height="100">*@
                <img src="" height="200" style="margin-right: -10px;width: 283px;" alt="Image preview...">
            </div> 
               @Html.ValidationMessageFor(model => model.image)
            </div>
      


            @*//loder*@
            <div id="loading">
                <img src="~/Content/img/dots.gif" id="gif" style="display: block; width: 80px; visibility: hidden;  margin: -34px 281px auto; " />
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-success" />
                </div>
            </div>

        </div>
 <div>
    @Html.ActionLink("Back to List", "Index")
</div>

}
<script src="js/jquery-1.11.1.min.js"></script>
<script
>$('#MyForm').submit(function () {
    $('#gif').css('visibility', 'visible');
});
</script>

<script>
    function previewFile() {
        var preview = document.querySelector('img');
        var file = document.querySelector('input[type=file]').files[0];
        var reader = new FileReader();

        reader.addEventListener("load", function () {
            preview.src = reader.result;
        }, false);

        if (file) {
            reader.readAsDataURL(file);
        }
    }
</script>
<script>
  function FillCity() {
    var stateId = $('#State').val();
    $.ajax({
        url: '/Employee/FillCity',
        type: "GET",
        dataType: "JSON",
        data: { State: stateId},
        success: function (cities) {
            $("#City").html(""); // clear before appending new list
            $.each(cities, function (i, city) {
                $("#City").append(
                    $('<option></option>').val(city.CityId).html(city.Name));
            });
        }
    });
  }
</script>
