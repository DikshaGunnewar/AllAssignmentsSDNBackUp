@model Assigment5Diksha.Models.EmployeeVM

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>EmployeeVM</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="form-group">
            @Html.LabelFor(model => model.Employees.EmployeeName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Employees.EmployeeName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Employees.EmployeeName, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Employees.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Employees.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Employees.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Employees.PhoneNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Employees.PhoneNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Employees.PhoneNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Employees.MaritialStatus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.CheckBoxFor(model => model.Employees.MaritialStatus, new { htmlAttributes = new { @class = "form-control" } })Married
                @Html.CheckBoxFor(model => model.Employees.MaritialStatus, new { htmlAttributes = new { @class = "form-control" } })UnMarried
                @Html.ValidationMessageFor(model => model.Employees.MaritialStatus, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Employees.State, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.Employees.State, new SelectList(ViewBag.StateList, "StateId", "StateName"),
              "Select state", new { @class = "form-control", @onchange = "GetCity()" })
                @Html.ValidationMessageFor(m => m.Employees.State, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Employees.City, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.Employees.City,new SelectList(Enumerable.Empty<SelectListItem>(), "CityId", "CityName"),
              "Select city", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Employees.City, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group" style="margin-left: 4px;">
            @Html.LabelFor(m => m.Employees.State, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.DropDownListFor(m => m.Employees.State, new SelectList(Model.States, "StateId", "StateName"), "Select State", new { @class = "form-control", @onchange = "GetCity()" })
            @Html.ValidationMessageFor(m => m.Employees.State, "", new { @class = "text-danger member" })

        </div>
        <div class="form-group" style="margin-left: 4px;">
            @Html.LabelFor(m => m.Employees.City, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.DropDownListFor(m => m.Employees.City, new SelectList(Model.Citys, "CityId", "CityName"), "Select City", new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Employees.City, "", new { @class = "text-danger member" })

        </div>*@

        @*<div class="form-group" style="margin-left: 4px;">
            @Html.LabelFor(m => m.Employees.City, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.DropDownListFor(m => m.Employees.City, new SelectList(Enumerable.Empty<SelectListItem>(), "CityId", "CityName"), "Select City", new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Employees.City, "", new { @class = "text-danger member" })

        </div>*@


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="reset" value="Reset" class="btn btn-default" />
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script>
    function GetCity() {
    var stateId = $('#State').val();
    $.ajax({
        url: '/Home/GetCity',
        type: "GET",
        dataType: "JSON",
        data: { State: stateId},
        success: function (cities) {
            $("#City").html(""); // clear before appending new list
            $.each(cities, function (i, city) {
                $("#City").append(
                    $('<option></option>').val(city.CityId).html(city.CityName));
            });
        }
    });
  }
</script>